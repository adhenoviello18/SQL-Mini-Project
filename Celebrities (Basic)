SELECT * FROM celebs;

CREATE TABLE celebs (  #CREATE statements allow us to create a new table in the database. You can use the CREATE statement anytime you want to create a new table from scratch. 
   id INTEGER, 
   name TEXT, 
   age INTEGER
); 

INSERT INTO celebs (id, name, age) #The INSERT statement inserts a new row into a table.
VALUES (1, 'Justin Bieber', 29);

INSERT INTO celebs (id, name, age) 
VALUES (2, 'Beyonce Knowles', 42); 

INSERT INTO celebs (id, name, age) 
VALUES (3, 'Jeremy Lin', 35); 

INSERT INTO celebs (id, name, age) 
VALUES (4, 'Taylor Swift', 33); 

SELECT name FROM celebs 
#SELECT statements are used to fetch data from a database. In the statement below, SELECT returns all data in the name column of the celebs table.

SELECT * FROM celebs; 
# You can also query data from all columns in a table with SELECT. * is a special wildcard character that we have been using. 

ALTER TABLE celebs 
ADD COLUMN twitter_handle TEXT;
# The ALTER TABLE statement adds a new column to a table. You can use this command when you want to add columns to a table. The statement below adds a new column twitter_handle to the celebs table.

UPDATE celebs 
SET twitter_handle = '@taylorswift13' 
WHERE id = 4; 

SELECT * FROM celebs;
# The UPDATE statement edits a row in a table. You can use the UPDATE statement when you want to change existing records.

DELETE FROM celebs 
WHERE twitter_handle IS NULL;

SELECT * FROM celebs; 
# The DELETE FROM statement deletes one or more rows from a table. You can use the statement when you want to delete existing records. 

CREATE TABLE awards (
   id INTEGER PRIMARY KEY,
   recipient TEXT NOT NULL,
   award_name TEXT DEFAULT 'Grammy'
);
# Constraints are the rules applied to the values of individual columns. They add information about how a column can be used after specifying the data type for a column. They can be used to tell the database to reject inserted data that does not adhere to a certain restriction. 
